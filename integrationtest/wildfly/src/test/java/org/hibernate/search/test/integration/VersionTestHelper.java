/*
 * Hibernate, Relational Persistence for Idiomatic Java
 *
 * Copyright (c) 2014, Red Hat, Inc. and/or its affiliates or third-party contributors as
 * indicated by the @author tags or express copyright attribution
 * statements applied by the authors.  All third-party contributions are
 * distributed under license by Red Hat, Inc.
 *
 * This copyrighted material is made available to anyone wishing to use, modify,
 * copy, or redistribute it subject to the terms and conditions of the GNU
 * Lesser General Public License, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this distribution; if not, write to:
 * Free Software Foundation, Inc.
 * 51 Franklin Street, Fifth Floor
 * Boston, MA  02110-1301  USA
 */
package org.hibernate.search.test.integration;

import org.jboss.shrinkwrap.api.Archive;
import org.jboss.shrinkwrap.api.asset.Asset;
import org.jboss.shrinkwrap.api.asset.StringAsset;
import org.jboss.shrinkwrap.descriptor.api.Descriptors;
import org.jboss.shrinkwrap.descriptor.api.spec.se.manifest.ManifestDescriptor;

/**
 * Helper class for integration testing of the JBoss Modules generated by the
 * hibernate-search-modules Maven module.
 *
 * The slot version is set as a property in the parent pom, and passed to the JVM
 * of Arquillian as a system property of the Maven maven-failsafe-plugin.
 *
 * Backported from version 5.0
 *
 * @since 5.0
 */
public class VersionTestHelper {

	private static final String wildflySearchModuleDependency = "org.hibernate.search.orm:" + getVersionString() + " services";
	private static final String wildflySearchModuleDependencyIncludingSolr = "org.hibernate.search.orm:" + getVersionString() + " services, org.apache.solr:" + getDependencyVersionLucene();

	private VersionTestHelper() {
		//not meant to be created
	}

	/**
	 * @return the slot version of the Hibernate Search modules generated by this project
	 */
	private static String getVersionString() {
		return System.getProperty( "hibernate.search.module.slot.version" );
	}

	/**
	 * @return the StringAsset to be used in a Manifest descriptor to enable the Hibernate-Search-ORM module
	 */
	public static Asset moduleDependencyManifest() {
		String manifest = Descriptors.create( ManifestDescriptor.class )
				.attribute( "Dependencies", wildflySearchModuleDependency )
				.exportAsString();
		return new StringAsset( manifest );
	}

	public static Asset moduleDependencyManifestIncludingSolr() {
		String manifest = Descriptors.create( ManifestDescriptor.class )
				.attribute( "Dependencies", wildflySearchModuleDependencyIncludingSolr )
				.exportAsString();
		return new StringAsset( manifest );
	}

	/**
	 * Adds the needed Manifest to a deployment to enable the Hibernate-Search-ORM module
	 * @param archive
	 */
	public static void addDependencyToSearchModule(Archive<?> archive) {
		archive.add( VersionTestHelper.moduleDependencyManifest(), "META-INF/MANIFEST.MF" );
	}

	public static String getDependencyVersionTika() {
		return System.getProperty( "dependency.version.Tika" );
	}

	public static String getDependencyVersionLucene() {
		return System.getProperty( "dependency.version.Lucene" );
	}

	public static String getDependencyVersionHibernateCommonsAnnotations() {
		return System.getProperty( "dependency.version.HibernateCommonsAnnotations" );
	}
}
